% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/second_adapt_phase.R
\name{second_adapt_phase}
\alias{second_adapt_phase}
\title{Second adaption phase}
\usage{
second_adapt_phase(
  transient.phase_net,
  omics,
  layers_def,
  B_prior_mat,
  energy_all_configs_node,
  prob_mbr,
  BGe_score_all_configs_node,
  parent_set_combinations,
  annot,
  woPKGE_belief = 0.5
)
}
\arguments{
\item{transient.phase_net}{list output of the transient.phase function.}

\item{omics}{named list containing the gene expression
(possibly copy number variation and methylation data).
Each component of the list is a matrix with samples in rows and
features in columns.}

\item{layers_def}{data.frame containing the modality ID, corresponding
layer in BN and maximal number of parents from given layer to GE nodes.}

\item{B_prior_mat}{a biological prior matrix.}

\item{energy_all_configs_node}{list of nodes energy for all possible
parent set configurations.}

\item{prob_mbr}{numeric vector probability of the MBR step.}

\item{BGe_score_all_configs_node}{list of nodes BGe score for all possible
parent set configurations.}

\item{parent_set_combinations}{list of all possible parent set configuration
for all nodes available.}

\item{annot}{named list containing the associated methylation
probes of given gene.}

\item{woPKGE_belief}{numeric vector to define the belief concerning
GE-GE interactions without prior knowledge (default=0.5).}
}
\value{
List of 1 element: first adaption phase + transient phase +
second adaption phase result
}
\description{
\code{second_adapt_phase} This phase identifies the proposal distribution
that has a similar covariance structure with the target distribution.
}
\examples{
data(list=c("OMICS_mod_res", "first.adapt.phase_net"), package="IntOMICS")
if(interactive()){transient.phase_net <- transient_phase(prob_mbr = 0.07,
    first.adapt.phase_net = first.adapt.phase_net, 
    omics = OMICS_mod_res$omics, B_prior_mat = OMICS_mod_res$B_prior_mat, 
    layers_def = OMICS_mod_res$layers_def, annot = OMICS_mod_res$annot,
    energy_all_configs_node = 
    OMICS_mod_res$pf_UB_BGe_pre$energy_all_configs_node,
    BGe_score_all_configs_node = 
    OMICS_mod_res$pf_UB_BGe_pre$BGe_score_all_configs_node, 
    parent_set_combinations = 
    OMICS_mod_res$pf_UB_BGe_pre$parents_set_combinations) 
    second_adapt_phase(omics = OMICS_mod_res$omics,
    transient.phase_net = transient.phase_net, woPKGE_belief = 0.5,
    layers_def = OMICS_mod_res$layers_def, annot = OMICS_mod_res$annot,
    energy_all_configs_node = 
    OMICS_mod_res$pf_UB_BGe_pre$energy_all_configs_node, 
    prob_mbr = 0.07, B_prior_mat = OMICS_mod_res$B_prior_mat, 
    BGe_score_all_configs_node = 
    OMICS_mod_res$pf_UB_BGe_pre$BGe_score_all_configs_node, 
    parent_set_combinations = 
    OMICS_mod_res$pf_UB_BGe_pre$parents_set_combinations)}

}
\keyword{internal}
