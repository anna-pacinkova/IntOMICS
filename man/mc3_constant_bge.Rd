% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc3_constant_bge.R
\name{mc3_constant_bge}
\alias{mc3_constant_bge}
\title{Markov Chain conventional single edge proposal move with BGe score fixed}
\usage{
mc3_constant_bge(
  source_net,
  omics,
  layers_def,
  B_prior_mat,
  beta.source,
  partition_func_UB_beta_source,
  parent_set_combinations,
  BGe_score_all_configs_node,
  annot
)
}
\arguments{
\item{source_net}{list with adjacency matrix and other parameters needed
for MCMC simulation.}

\item{omics}{named list containing the gene expression (possibly copy number
variation and methylation data). Each component of the list is a matrix
with samples in rows and features in columns.}

\item{layers_def}{data.frame containing the modality ID, corresponding layer
in BN and maximal number of parents from given layer to GE nodes.}

\item{B_prior_mat}{a biological prior matrix.}

\item{beta.source}{named list with hyperparameter beta value and other
parameters needed for MCMC simulation.}

\item{partition_func_UB_beta_source}{numeric vector the upper bound
of the partition function needed to define the prior distribution
of network structure.}

\item{parent_set_combinations}{list of all possible parent set configuration
for all nodes available.}

\item{BGe_score_all_configs_node}{list of nodes BGe score for all possible
parent set configurations.}

\item{annot}{named list containing the associated methylation probes
of given gene.}
}
\value{
List of 10 elements needed to define adjacency matrix
with conventional single edge move
}
\description{
\code{mc3_constant_bge} This function samples a conventional single edge proposal
move with ficed BGe score.
}
\examples{
data(list=c("OMICS_mod_res", "first.adapt.phase_net"),
package="IntOMICS")
mc3_constant_bge(B_prior_mat = OMICS_mod_res$B_prior_mat,
source_net=first.adapt.phase_net$nets[[length(first.adapt.phase_net$nets)]],
layers_def=OMICS_mod_res$layers_def, annot = OMICS_mod_res$annot,
beta.source=first.adapt.phase_net$betas[[length(first.adapt.phase_net$betas)]], 
partition_func_UB_beta_source=first.adapt.phase_net$partition_func_UB_beta_source, 
omics = OMICS_mod_res$omics, 
parent_set_combinations=OMICS_mod_res$pf_UB_BGe_pre$parents_set_combinations, 
BGe_score_all_configs_node=OMICS_mod_res$pf_UB_BGe_pre$BGe_score_all_configs_node)

}
\keyword{internal}
